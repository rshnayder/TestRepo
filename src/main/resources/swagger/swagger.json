{
  "swagger": "2.0",
  "info": {
    "description": "Description: in db already created 2 players: \n1. login: supervisor, with role: supervisor.\n2. login: admin, with role: admin",
    "title": "interview-test-app",
    "version": "1.0.0"
  },
  "host": "3.68.165.45",
  "basePath": "/",
  "tags": [
    {
      "name": "player-controller",
      "description": "Player Controller"
    }
  ],
  "paths": {
    "/player/create/{editor}": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "createPlayer",
        "operationId": "createPlayerUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "age",
            "in": "query",
            "description": "age",
            "required": true,
            "type": "string"
          },
          {
            "name": "editor",
            "in": "path",
            "description": "editor",
            "required": true,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "query",
            "description": "gender",
            "required": true,
            "type": "string"
          },
          {
            "name": "login",
            "in": "query",
            "description": "login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "role",
            "required": true,
            "type": "string"
          },
          {
            "name": "screenName",
            "in": "query",
            "description": "screenName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerCreateResponseDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/player/delete/{editor}": {
      "delete": {
        "tags": [
          "player-controller"
        ],
        "summary": "deletePlayer",
        "operationId": "deletePlayerUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "editor",
            "in": "path",
            "description": "editor",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerDeleteRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/player/get": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "getPlayerByPlayerId",
        "operationId": "getPlayerByPlayerIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerGetByPlayerIdRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerGetByPlayerIdResponseDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/player/get/all": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "getAllPlayers",
        "operationId": "getAllPlayersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerGetAllResponseDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/player/update/{editor}/{id}": {
      "patch": {
        "tags": [
          "player-controller"
        ],
        "summary": "updatePlayer",
        "operationId": "updatePlayerUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "editor",
            "in": "path",
            "description": "editor",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerUpdateRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerUpdateResponseDto"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "PlayerCreateResponseDto": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        }
      },
      "title": "PlayerCreateResponseDto"
    },
    "PlayerDeleteRequestDto": {
      "type": "object",
      "properties": {
        "playerId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PlayerDeleteRequestDto"
    },
    "PlayerGetAllResponseDto": {
      "type": "object",
      "properties": {
        "players": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerItem"
          }
        }
      },
      "title": "PlayerGetAllResponseDto"
    },
    "PlayerGetByPlayerIdRequestDto": {
      "type": "object",
      "properties": {
        "playerId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PlayerGetByPlayerIdRequestDto"
    },
    "PlayerGetByPlayerIdResponseDto": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        }
      },
      "title": "PlayerGetByPlayerIdResponseDto"
    },
    "PlayerItem": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        }
      },
      "title": "PlayerItem"
    },
    "PlayerUpdateRequestDto": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        }
      },
      "title": "PlayerUpdateRequestDto"
    },
    "PlayerUpdateResponseDto": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        }
      },
      "title": "PlayerUpdateResponseDto"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    }
  }
}